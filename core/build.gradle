apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.neenbedankt.android-apt'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.KOTLIN_VERSION}"
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

def static getSecretValue(name){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File("secrets.properties")))
    return props[name]
}

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILDTOOLS_VERSION
    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "PINTEREST_API_CLIENT_ID", "\"" + getSecretValue("PINTEREST_API_CLIENT_ID") + "\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile deps.kotlin
    compile deps.firebaseCore
    compile deps.firebaseDataBase
    compile deps.retrofit
    compile deps.retrofitMoshiConverter
    compile deps.retrofitAdapterRx
    compile deps.okhttp
    compile deps.okhttpLoggingIntercepter
    compile deps.moshi
    compile deps.dagger
    kapt deps.daggerCompiler
    compile deps.rxJava
    compile deps.rxAndroid
    compile deps.timber
    compile deps.stethoOkhttp  // FIXME: Use debugCompile

    testCompile deps.junit
    androidTestCompile(deps.espresso) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}
